{"ast":null,"code":"var _jsxFileName = \"/Users/burakkorkmaz/Desktop/SolarUpp/project/client/src/AppMenu.js\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nclass AppSubmenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: null\n    };\n  }\n\n  onMenuItemClick(event, item, index) {\n    //avoid processing disabled items\n    if (item.disabled) {\n      event.preventDefault();\n      return true;\n    } //execute command\n\n\n    if (item.command) {\n      item.command({\n        originalEvent: event,\n        item: item\n      });\n    }\n\n    if (index === this.state.activeIndex) this.setState({\n      activeIndex: null\n    });else this.setState({\n      activeIndex: index\n    });\n\n    if (this.props.onMenuItemClick) {\n      this.props.onMenuItemClick({\n        originalEvent: event,\n        item: item\n      });\n    }\n  }\n\n  renderLinkContent(item) {\n    let submenuIcon = item.items && /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-fw pi-angle-down menuitem-toggle-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    });\n    let badge = item.badge && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"menuitem-badge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, item.badge);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: item.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, item.label), submenuIcon, badge);\n  }\n\n  renderLink(item, i) {\n    let content = this.renderLinkContent(item);\n\n    if (item.to) {\n      return /*#__PURE__*/React.createElement(NavLink, {\n        activeClassName: \"active-route\",\n        to: item.to,\n        onClick: e => this.onMenuItemClick(e, item, i),\n        exact: true,\n        target: item.target,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, content);\n    } else {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: item.url,\n        onClick: e => this.onMenuItemClick(e, item, i),\n        target: item.target,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, content);\n    }\n  }\n\n  render() {\n    let items = this.props.items && this.props.items.map((item, i) => {\n      let active = this.state.activeIndex === i;\n      let styleClass = classNames(item.badgeStyleClass, {\n        \"active-menuitem\": active && !item.to\n      });\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: styleClass,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, item.items && this.props.root === true && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"arrow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }), this.renderLink(item, i), /*#__PURE__*/React.createElement(AppSubmenu, {\n        items: item.items,\n        onMenuItemClick: this.props.onMenuItemClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }));\n    });\n    return items ? /*#__PURE__*/React.createElement(\"ul\", {\n      className: this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 20\n      }\n    }, items) : null;\n  }\n\n}\n\nAppSubmenu.defaultProps = {\n  className: null,\n  items: null,\n  onMenuItemClick: null,\n  root: false\n};\nAppSubmenu.propTypes = {\n  className: PropTypes.string,\n  items: PropTypes.array,\n  onMenuItemClick: PropTypes.func,\n  root: PropTypes.bool\n};\nexport class AppMenu extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"layout-menu-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppSubmenu, {\n      items: this.props.model,\n      className: \"layout-menu\",\n      onMenuItemClick: this.props.onMenuItemClick,\n      root: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nAppMenu.defaultProps = {\n  model: null,\n  onMenuItemClick: null\n};\nAppMenu.propTypes = {\n  model: PropTypes.array,\n  onMenuItemClick: PropTypes.func\n};","map":{"version":3,"sources":["/Users/burakkorkmaz/Desktop/SolarUpp/project/client/src/AppMenu.js"],"names":["React","Component","NavLink","PropTypes","classNames","AppSubmenu","constructor","props","state","activeIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","setState","renderLinkContent","submenuIcon","items","badge","icon","label","renderLink","i","content","to","e","target","url","render","map","active","styleClass","badgeStyleClass","root","className","defaultProps","propTypes","string","array","func","bool","AppMenu","model"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nclass AppSubmenu extends Component {\n  static defaultProps = {\n    className: null,\n    items: null,\n    onMenuItemClick: null,\n    root: false\n  };\n\n  static propTypes = {\n    className: PropTypes.string,\n    items: PropTypes.array,\n    onMenuItemClick: PropTypes.func,\n    root: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { activeIndex: null };\n  }\n\n  onMenuItemClick(event, item, index) {\n    //avoid processing disabled items\n    if (item.disabled) {\n      event.preventDefault();\n      return true;\n    }\n\n    //execute command\n    if (item.command) {\n      item.command({ originalEvent: event, item: item });\n    }\n\n    if (index === this.state.activeIndex) this.setState({ activeIndex: null });\n    else this.setState({ activeIndex: index });\n\n    if (this.props.onMenuItemClick) {\n      this.props.onMenuItemClick({\n        originalEvent: event,\n        item: item\n      });\n    }\n  }\n\n  renderLinkContent(item) {\n    let submenuIcon = item.items && (\n      <i className=\"pi pi-fw pi-angle-down menuitem-toggle-icon\"></i>\n    );\n    let badge = item.badge && (\n      <span className=\"menuitem-badge\">{item.badge}</span>\n    );\n\n    return (\n      <React.Fragment>\n        <i className={item.icon}></i>\n        <span>{item.label}</span>\n        {submenuIcon}\n        {badge}\n      </React.Fragment>\n    );\n  }\n\n  renderLink(item, i) {\n    let content = this.renderLinkContent(item);\n\n    if (item.to) {\n      return (\n        <NavLink\n          activeClassName=\"active-route\"\n          to={item.to}\n          onClick={e => this.onMenuItemClick(e, item, i)}\n          exact\n          target={item.target}\n        >\n          {content}\n        </NavLink>\n      );\n    } else {\n      return (\n        <a\n          href={item.url}\n          onClick={e => this.onMenuItemClick(e, item, i)}\n          target={item.target}\n        >\n          {content}\n        </a>\n      );\n    }\n  }\n\n  render() {\n    let items =\n      this.props.items &&\n      this.props.items.map((item, i) => {\n        let active = this.state.activeIndex === i;\n        let styleClass = classNames(item.badgeStyleClass, {\n          \"active-menuitem\": active && !item.to\n        });\n\n        return (\n          <li className={styleClass} key={i}>\n            {item.items && this.props.root === true && (\n              <div className=\"arrow\"></div>\n            )}\n            {this.renderLink(item, i)}\n            <AppSubmenu\n              items={item.items}\n              onMenuItemClick={this.props.onMenuItemClick}\n            />\n          </li>\n        );\n      });\n\n    return items ? <ul className={this.props.className}>{items}</ul> : null;\n  }\n}\n\nexport class AppMenu extends Component {\n  static defaultProps = {\n    model: null,\n    onMenuItemClick: null\n  };\n\n  static propTypes = {\n    model: PropTypes.array,\n    onMenuItemClick: PropTypes.func\n  };\n\n  render() {\n    return (\n      <div className=\"layout-menu-container\">\n        <AppSubmenu\n          items={this.props.model}\n          className=\"layout-menu\"\n          onMenuItemClick={this.props.onMenuItemClick}\n          root={true}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}